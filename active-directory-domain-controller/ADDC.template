{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Deploys a new Active Directory forest domain controller.",

  "Parameters" : {

    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to encrypt the Admin password",
      "Type" : "String"
    },

    "InstanceType" : {
      "Description" : "EC2 instance type",
      "Type" : "String",
      "Default" : "m1.small",
      "AllowedValues" : [ "m1.sminy", "m1.small", "m1.medium", "m1.large", "m1.xlarge" ],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "SubnetId": {
      "Type" : "String",
      "Description" : "SubnetId of an existing subnet"
    },

    "DomainName": {
      "Default": "cloudbase",
      "Description" : "The domain name",
      "Type": "String",
      "MinLength": "3",
      "MaxLength": "256",
    },

    "SafeModeAdministratorPassword": {
      "Default": "Passw0rd",
      "Description" : "The safe mode administration password",
      "Type": "String",
      "MinLength": "8",
      "MaxLength": "64",
      "AllowedPattern" : "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
      "ConstraintDescription": "Must contain letters, numbers and symbols"
    },

    "WindowsVersion": {
      "Default": "WS12R2",
      "Description" : "Windows version of choice",
      "Type": "String",
      "AllowedValues" : [ "WS12R2" ]
    }
  },

  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "m1.small"    : { "Arch" : "64" },
      "m1.medium"    : { "Arch" : "64" },
      "m1.large"   : { "Arch" : "64" },
      "m1.xlarge"   : { "Arch" : "64" },
      "m1.sminy" :  { "Arch" : "64" }
    },
    "VersionArch2Image": {
      "WS12R2" : { "64" : "returncodefix" }
    }
  },

  "Resources" : { 
    "EIP": {
    "Type" : "AWS::EC2::EIP",
    "Properties":{
          "Domain":"vpc",
          "InstanceId":{
              "Ref":"DomainController"
              }
          }
    }, 
    "ADWaitCondition": {
        "DependsOn": "DomainController",
        "Properties": {
            "Handle": {
                  "Ref": "ADWaitHandle"
                },
            "Timeout": "3600"
        },
        "Type": "AWS::CloudFormation::WaitCondition"
    },
    "ADWaitHandle": {
        "Type": "AWS::CloudFormation::WaitConditionHandle"
    },
    "DomainController": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId" : { "Fn::FindInMap" : [ "VersionArch2Image", { "Ref" : "WindowsVersion" },
                          { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
        "InstanceType"   : { "Ref" : "InstanceType" },
        "SubnetId"       : { "Ref" : "SubnetId" },
        "KeyName"        : { "Ref" : "KeyName" },
        "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#ps1_sysnative\n",
          "$rebootAndExecutePlugin = 1003\n",
          "$domain = \"",
                                {
                                    "Ref": "DomainName"
                                },
          "\"\n",
          "$waitHandleUrl = \"",
                                {
                                    "Ref": "ADWaitHandle"
                                },
          "\"\n",
          "$password = \"",
                                {
                                    "Ref": "SafeModeAdministratorPassword"
                                },
          "\"\n",
          "$ErrorActionPreference = 'Stop'\n", 
          "if (!($env:userdomain -eq $domain))\n",
          "{\n",
          "Install-WindowsFeature -Name AD-Domain-Services -IncludeManagementTools\n",
          "$user = [ADSI]'WinNT://./Administrator'\n",
          "# Disable user\n",
          "#$user.userflags = 2\n",
          "#$user.SetInfo()\n",
          "$user.SetPassword($password)\n",
          "Import-Module ADDSDeployment\n",
          "$safeModePwd = (ConvertTo-SecureString $password -AsPlainText -Force)\n",
          "Install-ADDSForest -DomainName $domain\".LOCAL\" -DomainNetbiosName $domain -SafeModeAdministratorPassword $safeModePwd -InstallDns -NoRebootOnCompletion -Force\n",
          "exit $rebootAndExecutePlugin\n",
          "}\n",
          "else {\n",
          "$cfnMessage = '{\"Status\" : \"SUCCESS\",\"Reason\" : \"Configuration Complete\",\"UniqueId\" : \"ID1234\",\"Data\" : \"ADDC has completed configuration.\"}'\n",
          "Invoke-RestMethod -Method PUT -Uri $waitHandleUrl -Body $cfnMessage\n",
          "}\n"
        ]]}}
      }
    }
  }
}
